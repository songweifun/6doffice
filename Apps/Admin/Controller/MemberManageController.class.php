<?php
/**
 * Created by PhpStorm.
 * User: david
 * Date: 16/11/28
 * Time: 下午8:50
 */
namespace Admin\Controller;
use Think\Controller;
class MemberManageController extends CommonController{
    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        $this->cate=CONTROLLER_NAME;
    }

    /**
     * 经纪人列表
     */
    public function index(){
        $this->menu=ACTION_NAME;
        import('Class.Dd',APP_PATH);
        $member=D('Member');
        $action=I('get.action');
        if($action=='avatar'){//删除用户头像

            $back_url = $_SERVER['HTTP_REFERER'];
            $ids = $_POST['ids'];
            if(!is_array($ids) || empty($ids)){
                $this->error('没有选择删除条目');
            }
            try{
                $fieldData = array('avatar'=>'');
                foreach($ids as $id){
                    $member->updateInfo($id,$fieldData,true,1);
                }

                $this->error('删除用户头像成功',$back_url);
            }catch (Exception $e){
                $this->error($e->getMessage());
            }

        }elseif($action=='view'){

        }elseif($action=='delete'){
            $back_url = $_SERVER['HTTP_REFERER'];
            $ids = $_POST['ids'];
            if(!is_array($ids) || empty($ids)){
                $this->error('没有选择删除条目');
            }
            try{

                $member->deleteMember($ids,2);
                $this->success('删除用户成功',$back_url);
            }catch (Exception $e){
                $this->error($e->getMessage());
            }

            exit;

        }elseif($action=='isindex'){

        }elseif($action=='status'){
            $back_url = $_SERVER['HTTP_REFERER'];
            $ids = $_POST['ids'];
            $dostatus = intval($_GET['dostatus']);
            if(!is_array($ids) || empty($ids)){
                $this->error('没有选择需要操作的条目');
            }
            try{
                $member->changeStatus($ids,$dostatus);
                $this->success('操作成功',$back_url);
            }catch (Exception $e){
                $this->error($e->getMessage());
            }

            exit;
        }else {
            $where = '1=1 and user_type=1';
            if ($_GET['status']) {
                $where .= ' and status =' . intval($_GET['status']);
            }
            if ($_GET['vip']) {
                $where .= ' and vip =' . intval($_GET['vip']);
            }
            if ($_GET['isindex']) {
                $where .= ' and is_index =' . intval($_GET['isindex']);
            }
            if ($_GET['is_open']) {
                $where .= ' and is_open =' . intval($_GET['is_open']);
            }
            if ($_GET['username']) {
                $where .= " and username like '%" . trim($_GET['username']) . "%'";
            }

            if ($_GET['realname']) {
                $ids_realname = $member->searchMember('realname', trim($_GET['realname']));
            }
            if ($_GET['tel']) {
                $ids_tel = $member->searchMember('tel', trim($_GET['tel']));
            }
            if ($_GET['email']) {
                $where .= " and email like '%" . trim($_GET['email']) . "%'";
            }
            if ($_GET['idcard']) {
                $ids_idcard = $member->searchMember('idcard', trim($_GET['idcard']));
            }
            if ($_GET['com']) {
                $ids_com = $member->searchMember('com', trim($_GET['com']));
            }
            if ($_GET['avatar']) {
                $ids_avatar = $member->searchMember('avatar', $_GET['avatar']);
            }
            if ($_GET['identity']) {
                $ids_idcard = $member->searchMember('identity', $_GET['identity']);
            }
            if ($_GET['realname'] || $_GET['tel'] || $_GET['email'] || $_GET['idcard'] || $_GET['com'] || $_GET['avatar'] || $_GET['identity']) {
                $ids = array_merge((array)$ids_realname, (array)$ids_tel, (array)$ids_idcard, (array)$ids_com, (array)$ids_avatar, (array)$ids_idcard);
                $ids = array_unique($ids);
                if ($ids) {
                    $where .= " and id in (" . implode(',', $ids) . ")";
                } else {
                    $where .= " and 0";
                }
            }
            $user_type = \Dd::getArray('user_type');

            $Page = new \Think\Page($member->getCount($where), 10);
            $Page->setConfig('header', '共%TOTAL_ROW%条');
            $Page->setConfig('first', '首页');
            $Page->setConfig('last', '共%TOTAL_PAGE%页');
            $Page->setConfig('prev', '上一页');
            $Page->setConfig('next', '下一页');
            $Page->setConfig('link', 'indexpagenumb');//pagenumb 会替换成页码
            $Page->setConfig('theme', '%HEADER% %FIRST% %UP_PAGE% %LINK_PAGE% %DOWN_PAGE% %END%');

            $pageLimit = $Page->firstRow . ',' . $Page->listRows;
            $memberList = $member->getList($pageLimit, '*', $where, 'add_time desc');
            foreach ($memberList as $key => $value) {
                $memberList[$key]['member_info'] = $member->getMoreInfo($value['id'], 1);
            }
            $this->assign('dataList', $memberList);
            $this->assign('pagePanel', $Page->show());//分页条
        }
        $this->display();
    }

    /**
     * 修改名字弹窗
     */
    public function changeName(){

        $this->title =  $this->title.' - 委托信息';

        $member = D('Member');
        $action=I('get.action');

        if($action == 'save'){
            //保存
            //p($_POST);die;
            $id = intval($_POST['id']);
            $_POST = charsetIconv($_POST);
            if($_POST['user_type'] == 1){
                $fieldData = array('realname'=>trim($_POST['realname']));
                $member->updateInfo($id,$fieldData,true,1);
            }else{
                $fieldData = array('first_name'=>trim($_POST['first_name']),'last_name'=>trim($_POST['last_name']));
                $member->updateInfo($id,$fieldData,true,2);
            }
            echo 1;
            exit;
        }else{

            if(!$_GET['id']){
                exit;
            }
            //编辑成交
            $id = intval($_GET['id']);
            $memberInfo = $member->getInfo($id,'*',true);

            $this->assign('dataInfo', $memberInfo);
        }

        $this->display();

    }

    /**
     * 修改密码弹窗
     */
    public function changePw(){

        $member = D('Member');
        $action=I('get.action');

        $this->title =  $this->title.' - 委托信息';
        $id = intval($_GET['id']);
        $datainfo = $member->getInfo($id,'*',false);
        $this->assign('datainfo', $datainfo);
        $this->assign('id', $id);
        if($action == 'update'){

                $id = intval($_POST['id']);
                $passwd = md5($_POST['passwd']);
                $data = array('passwd'=>$passwd);

                if($member->updateInfo($id,$data,false,0)){
                    $this->ajaxReturn(array('status'=>1));

                }else{
                    $this->ajaxReturn(array('status'=>0));
                }

        }

        $this->display();
    }

    /**
     * 修改积分弹窗
     */
    public function changeSc(){
        $member = D('Member');
        $action=I('get.action');
        $this->title =  $this->title.' - 用户积分';
        $id = intval($_GET['id']);
        $datainfo = $member->getInfo($id,'*',false);
        $this->assign('datainfo', $datainfo);
        $this->assign('id', $id);
        if($action == 'update'){

                $id = intval($_POST['id']);
                $scores = intval($_POST['scores']);
            if($member->updateScore($id,$scores)){
                $this->ajaxReturn(array('status'=>1));
            }else{
                $this->ajaxReturn(array('status'=>0));
            }
            exit;
        }
        $this->display();
    }

    /**
     * 修改套餐弹窗
     */
    public function changeVip(){

        $member = D('Member');
        $action=I('get.action');
        $id = intval($_GET['id']);
        $datainfo = $member->getInfo($id,'*',false);
        $this->assign('datainfo', $datainfo);
        $this->assign('id', $id);
        $money = intval($_POST['money']);
        $vip =  intval($_POST['vip']);
        $this->assign('id', $id);

        if($_GET['realname']){
            $ids_realname = $member->searchMember('realname',trim($_GET['realname']));
        }

        if($action == 'save') {
            $_POST['member_id'] = intval($_POST['id']);

            if ($_GET['type'] == 1) {
                $_POST['to_time'] = 2592000 + time();    //30天
            }
            if ($_GET['type'] == 2) {
                $_POST['to_time'] = 7776000 + time();   //90天
            }


            //更改会员标识 并写入时间表
            $member->vipSave($_POST,$_GET['type']);
            $this->ajaxReturn(array('status'=>1));

            exit;
        }

        $this->display();

    }

    /**
     * 充值弹窗
     */
    public function changeMoney(){

        $member = D('Member');
        $action=I('get.action');

        $this->title =  $this->title.' - 用户余额';
        $id = intval($_GET['id']);
        $datainfo = $member->getInfo($id,'*',false);
        $this->assign('datainfo', $datainfo);
        $this->assign('id', $id);
        if($action == 'update'){

                $id = intval($_POST['id']);
                $money = intval($_POST['money']);
                if($member->updatemoney($id,$money)){
                    $this->ajaxReturn(array('status'=>1));


                }else{
                    $this->ajaxReturn(array('status'=>0));

                }

            exit;
        }

        $this->display();

    }

    /**
     * 详细
     */
    public function memberView(){
        $this->menu='index';
        import('Class.Dd',APP_PATH);


        $member = D('Member');
        $id = intval($_GET['id']);
        $userInfo = $member->getInfo($id,'*',true);
        $dd = D('Dd');
        if($userInfo['cityarea_id']){
            $cityarea_arr = \Dd::getArray('cityarea');
            $userInfo['cityarea_id'] = $cityarea_arr[$userInfo['cityarea_id']];
        }
        if($userInfo['broker_type']){
            $broker_type = \Dd::getArray('broker_type');
            $userInfo['broker_type'] = $broker_type[$userInfo['broker_type']];
        }
        $borough = D('Borough');
        if($userInfo['borough_id']){
            $userInfo['borough_id'] = $borough->getInfo($userInfo['borough_id'],'borough_name');
        }
        $this->assign('dataInfo',$userInfo);
        $this->display();

    }

    /**
     * 身份审核
     */
    public function indentity(){
        $this->menu=ACTION_NAME;

        import('Class.Dd',APP_PATH);
        $identity = D('BrokerIdentity');
        $action=I('get.action');

        if($action=='search'){

        }elseif($action=='delete'){
            $ids = $_POST['ids'];
            $back_url = $_SERVER['HTTP_REFERER'];
            if(!is_array($ids) || empty($ids)){
                $this->error('没有选择删除条目');
            }
            try{
                $identity->deleteInfo($ids);
                $this->success('删除成功',$back_url);
            }catch (Exception $e){
                $this->error($e->getMessage());
            }

            exit;

        }elseif($action=='status'){
            $back_url = $_SERVER['HTTP_REFERER'];
            $ids = $_POST['ids'];
            $dostatus = intval($_GET['dostatus']);
            if(!is_array($ids) || empty($ids)){
                $this->error('没有选择需要操作的条目');
            }
            $member = D('Member');
            $messageRule = D('MessageRule');
            $innernote =D('Innernote');
            $integral = D('IntegralRule');
            try{
                if($dostatus==1){
                    //通过，更该用户信息
                    foreach($ids as $a_id){
                        //修改单条信息
                        $identity->changeStatus($a_id,$dostatus);

                        $dataInfo = $identity->getInfo($a_id);

                        if($member->getMoreInfo($dataInfo['broker_id'],1)){
                            $updateField = array (
                                'idcard'=>$dataInfo['idcard'],
                                'idcard_pic'=>$dataInfo['idcard_pic'],
                            );
                            $member->updateInfo($dataInfo['broker_id'],$updateField,true,1);
                        }else{
                            $insertField = array (
                                'id'=>$dataInfo['broker_id'],
                                'idcard'=>$dataInfo['idcard'],
                                'idcard_pic'=>$dataInfo['idcard_pic'],
                            );
                            $member->insertInfo($insertField,true,1);
                        }
                        //增加积分
                        if(!$integral->getLogByRuleId($dataInfo['broker_id'],5)){
                            $integral->addScore($dataInfo['broker_id'],5);
                        }
                        $ruleInfo = $integral->getInfo(5);
                        //发送站内信
                        if($dataInfo['broker_id']){
                            $message = $messageRule->getInfo(10,'rule_remark')['rule_remark'];
                            $real_name = $member->getRealName($dataInfo['broker_id'],1);

                            $username = $member->getInfo($dataInfo['broker_id'],'username')['username'];
                            $message = sprintf($message,$real_name,$ruleInfo['rule_score']);
                            //p($username);die;
                            $innernote->send('系统',$username,'系统消息',$message);
                        }
                    }
                }else{
                    //其他更改标志即可，无需更改用户信息
                    $identity->changeStatus($ids,$dostatus);
                    //发送站内信
                    foreach($ids as $a_id){
                        $dataInfo = $identity->getInfo($a_id);
                        if($dataInfo['broker_id']){
                            $message = $messageRule->getInfo(9,'rule_remark')['rule_remark'];
                            $real_name = $member->getRealName($dataInfo['broker_id'],1);
                            $username = $member->getInfo($dataInfo['broker_id'],'username')['username'];
                            $message = sprintf($message,$real_name);
                            $innernote->send('系统',$username,'系统消息',$message);
                        }
                    }
                }
                $this->success('操作成功',$back_url);
            }catch (Exception $e){
                $this->error($e->getMessage());
            }

            exit;

        }else{
            if(isset($_GET['status'])){
                $where = ' status ='.intval($_GET['status']);
            }

            $Page = new \Think\Page($identity->getCount($where), 10);
            $Page->setConfig('header', '共%TOTAL_ROW%条');
            $Page->setConfig('first', '首页');
            $Page->setConfig('last', '共%TOTAL_PAGE%页');
            $Page->setConfig('prev', '上一页');
            $Page->setConfig('next', '下一页');
            $Page->setConfig('link', 'indexpagenumb');//pagenumb 会替换成页码
            $Page->setConfig('theme', '%HEADER% %FIRST% %UP_PAGE% %LINK_PAGE% %DOWN_PAGE% %END%');

            $pageLimit = $Page->firstRow . ',' . $Page->listRows;
            $identityList = $identity->getList($pageLimit,'*',$where,'add_time desc ');
            $member = D('Member');
            foreach ($identityList as $key => $value){
                $identityList[$key]['user'] = $member->getInfo($value['broker_id'],'*',true);
                $identityList[$key]['idcard_exist'] = $member->checkIdcardUnique($value['idcard']);
            }


            $this->assign('dataList', $identityList);
            $this->assign('pagePanel', $Page->show());//分页条

        }

        $this->display();
    }
    /**
     * 资质审核
     */
    public function aptitude(){
        $this->menu=ACTION_NAME;

        import('Class.Dd',APP_PATH);
        $aptitude = D('BrokerAptitude');
        $action=I('get.action');
        if($action=='search'){

        }elseif($action=='delete'){
            $ids = $_POST['ids'];
            $back_url = $_SERVER['HTTP_REFERER'];
            if(!is_array($ids) || empty($ids)){
                $this->error('没有选择删除条目');
            }
            try{
                $aptitude->deleteInfo($ids);
                $this->success('删除成功',$back_url);
            }catch (Exception $e){
                $this->error($e->getMessage());
            }

            exit;

        }elseif($action=='status'){
            $ids = $_POST['ids'];
            $back_url = $_SERVER['HTTP_REFERER'];
            $dostatus = intval($_GET['dostatus']);
            if(!is_array($ids) || empty($ids)){
                $this->error('没有选择需要操作的条目');
            }
            $member = D('Member');
            $messageRule = D('MessageRule');
            $innernote =D('Innernote');
            $integral = D('IntegralRule');
            try{
                if($dostatus==1){
                    //通过，更该用户信息
                    foreach($ids as $a_id){
                        //修改单条信息
                        $aptitude->changeStatus($a_id,$dostatus);

                        $dataInfo = $aptitude->getInfo($a_id);
                        $updateField = array (
                            'aptitude'=>$dataInfo['aptitude_pic']
                        );
                        $member->updateInfo($dataInfo['broker_id'],$updateField,true,1);
                        //增加积分
                        if(!$integral->getLogByRuleId($dataInfo['broker_id'],6)){
                            $integral->addScore($dataInfo['broker_id'],6);
                        }
                        $ruleInfo = $integral->getInfo(6);
                        //发送站内信
                        if($dataInfo['broker_id']){
                            $message = $messageRule->getInfo(12,'rule_remark')['rule_remark'];
                            $real_name = $member->getRealName($dataInfo['broker_id'],1);
                            $username = $member->getInfo($dataInfo['broker_id'],'username')['username'];
                            $message = sprintf($message,$real_name,$ruleInfo['rule_score']);
                            $innernote->send('系统',$username,'系统消息',$message);
                        }
                    }
                }else{
                    //其他更改标志即可，无需更改用户信息
                    $aptitude->changeStatus($ids,$dostatus);
                    //发送站内信
                    foreach($ids as $a_id){
                        $dataInfo = $aptitude->getInfo($a_id);
                        if($dataInfo['broker_id']){
                            $message = $messageRule->getInfo(11,'rule_remark')['rule_remark'];
                            $real_name = $member->getRealName($dataInfo['broker_id'],1);
                            $username = $member->getInfo($dataInfo['broker_id'],'username')['username'];
                            $message = sprintf($message,$real_name);
                            $innernote->send('系统',$username,'系统消息',$message);
                        }
                    }
                }
                $this->success('操作成功',$back_url);
            }catch (Exception $e){
                $this->error($e->getMessage());
            }

            exit;


        }else{
            if(isset($_GET['status'])){
                $where = ' status ='.intval($_GET['status']);
            }

            $Page = new \Think\Page($aptitude->getCount($where), 10);
            $Page->setConfig('header', '共%TOTAL_ROW%条');
            $Page->setConfig('first', '首页');
            $Page->setConfig('last', '共%TOTAL_PAGE%页');
            $Page->setConfig('prev', '上一页');
            $Page->setConfig('next', '下一页');
            $Page->setConfig('link', 'indexpagenumb');//pagenumb 会替换成页码
            $Page->setConfig('theme', '%HEADER% %FIRST% %UP_PAGE% %LINK_PAGE% %DOWN_PAGE% %END%');

            $pageLimit = $Page->firstRow . ',' . $Page->listRows;
            $aptitudeList = $aptitude->getList($pageLimit,'*',$where,'add_time desc');
            $member = D('Member');
            foreach ($aptitudeList as $key => $value){
                $aptitudeList[$key]['user'] = $member->getInfo($value['broker_id'],'*',true);
            }
           $this->assign('dataList', $aptitudeList);
           $this->assign('pagePanel', $Page->show());//分页条





        }
        $this->display();

    }
    /**
     * 头像审核
     */
    public function avatar(){
        $this->menu=ACTION_NAME;

        import('Class.Dd',APP_PATH);
        $avatar = D('BrokerAvatar');
        $action=I('get.action');
        if($action=='search'){

        }elseif($action=='delete'){
            $ids = $_POST['ids'];
            $back_url = $_SERVER['HTTP_REFERER'];
            if(!is_array($ids) || empty($ids)){
                $this->error('没有选择删除条目');
            }
            try{
                $avatar->deleteInfo($ids);
                $this->success('删除成功',$back_url);
            }catch (Exception $e){
                $this->error($e->getMessage());
            }

            exit;

        }elseif($action=='status'){
            $back_url = $_SERVER['HTTP_REFERER'];
            $ids = $_POST['ids'];
            $dostatus = intval($_GET['dostatus']);
            if(!is_array($ids) || empty($ids)){
                $this->error('没有选择需要操作的条目');
            }
            $member = D('Member');
            $messageRule = D('MessageRule');
            $innernote =D('Innernote');
            $integral = D('IntegralRule');
            try{
                if($dostatus==1){
                    //通过，更该用户信息
                    foreach($ids as $a_id){
                        //修改单条信息
                        $avatar->changeStatus($a_id,$dostatus);

                        $dataInfo = $avatar->getInfo($a_id);
                        $updateField = array (
                            'avatar'=>$dataInfo['avatar_pic']
                        );
                        $member->updateInfo($dataInfo['broker_id'],$updateField,true,1);
                        //发送站内信

                        if($dataInfo['broker_id']){
                            $message = $messageRule->getInfo(14,'rule_remark')['rule_remark'];
                            $real_name = $member->getRealName($dataInfo['broker_id'],1);
                            $username = $member->getInfo($dataInfo['broker_id'],'username')['username'];
                            $message = sprintf($message,$real_name,U('Home/Shop/index'),$dataInfo['broker_id']);
                            $innernote->send('系统',$username,'系统消息',$message);
                        }
                    }
                }else{
                    //其他更改标志即可，无需更改用户信息
                    $avatar->changeStatus($ids,$dostatus);
                    //发送站内信
                    foreach($ids as $a_id){
                        $dataInfo = $avatar->getInfo($a_id);
                        if($dataInfo['broker_id']){
                            $message = $messageRule->getInfo(13,'rule_remark')['rule_remark'];
                            $real_name = $member->getRealName($dataInfo['broker_id'],1);
                            $username = $member->getInfo($dataInfo['broker_id'],'username')['username'];
                            $message = sprintf($message,$real_name);
                            $innernote->send('系统',$username,'系统消息',$message);
                        }
                    }
                }
                $this->success('操作成功',$back_url);
            }catch (Exception $e){
                $this->error($e->getMessage());
            }

            exit;

        }else{
            if(isset($_GET['status'])){
                $where = ' status ='.intval($_GET['status']);
            }
            $Page = new \Think\Page($avatar->getCount($where), 10);
            $Page->setConfig('header', '共%TOTAL_ROW%条');
            $Page->setConfig('first', '首页');
            $Page->setConfig('last', '共%TOTAL_PAGE%页');
            $Page->setConfig('prev', '上一页');
            $Page->setConfig('next', '下一页');
            $Page->setConfig('link', 'indexpagenumb');//pagenumb 会替换成页码
            $Page->setConfig('theme', '%HEADER% %FIRST% %UP_PAGE% %LINK_PAGE% %DOWN_PAGE% %END%');

            $pageLimit = $Page->firstRow . ',' . $Page->listRows;
            $avatarList = $avatar->getList($pageLimit,'*',$where,'add_time desc ');
            $member = D('Member');
            foreach ($avatarList as $key => $value){
                $avatarList[$key]['user'] = $member->getInfo($value['broker_id'],'*',true);
            }
           $this->assign('dataList', $avatarList);
           $this->assign('pagePanel', $Page->show());//分页条



        }
        $this->display();

    }
    /**
     * 评价审核
     */
    public function evaluate(){
        $this->menu=ACTION_NAME;

        import('Class.Dd',APP_PATH);
        $member = D('Member');

        $action=I('get.action');
        if($action=='delete'){

            $back_url = $_SERVER['HTTP_REFERER'];
            $ids = $_POST['ids'];
            if(!is_array($ids) || empty($ids)){
                $this->error('没有选择删除条目');
            }
            try{
                $member->deleteEvaluate($ids);
                $this->success('删除成功',$back_url);
            }catch (Exception $e){
                $this->error($e->getMessage());
            }

            exit;

        }else{
            $where = '1 ';
            $Page = new \Think\Page($member->getCount($where), 10);
            $Page->setConfig('header', '共%TOTAL_ROW%条');
            $Page->setConfig('first', '首页');
            $Page->setConfig('last', '共%TOTAL_PAGE%页');
            $Page->setConfig('prev', '上一页');
            $Page->setConfig('next', '下一页');
            $Page->setConfig('link', 'indexpagenumb');//pagenumb 会替换成页码
            $Page->setConfig('theme', '%HEADER% %FIRST% %UP_PAGE% %LINK_PAGE% %DOWN_PAGE% %END%');

            $pageLimit = $Page->firstRow . ',' . $Page->listRows;
            $evaluateList = $member->getEvaluateList($pageLimit,'*',$where,'time desc');

            foreach ($evaluateList as $key => $item){
                $evaluateList[$key]['broker_info'] = $member->getInfo($item['broker_id'],'*',true);
            }

           $this->assign('dataList', $evaluateList);
           $this->assign('pagePanel', $Page->show());//分页条
        }

        $this->display();
    }
}